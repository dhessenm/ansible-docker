---

- name: Some Packages for Docker are present
  apt: name={{ item }} state=present update_cache=yes
  with_items: packages_ubuntu

- name: Docker apt repository is present
  apt_key: 
    keyserver=hkp://p80.pool.sks-keyservers.net:80 
    id=58118E89F3A912897C070ADBF76221572C52609D
    state=present

- name: Docker apt docker.list is present
  template:
    src=docker.list
    dest=/etc/apt/sources.list.d/docker.list

- name: Apt cache is update
  apt: update_cache=yes

- name: Lxc-docker is absent
  apt: pkg=lxc-docker state=removed

- name: Docker-engine is present
  apt: name=docker-engine state=present

- name: Group docker is present
  group: name=docker state=present

- name: User vagrant is in group docker
  user: name=vagrant groups=docker append=yes
  # when: infrastructure_provider == "vagrant"

- name: Docker files are present
  template:
    src: docker.cfg
    dest: /etc/default/docker
    mode: 0644
    owner: root
    group: root
  register: copy_result
  notify: Ubuntu restart docker 

- name: Proxy configuration in docker config is present
  lineinfile:
    dest: /etc/default/docker
    regexp: '^{{ item.regexp }}'
    line: '{{ item.regexp }}={{ item.value }}'
  with_items:
    - { regexp: 'export HTTP_PROXY', value:  '{{ proxy }}' }
    - { regexp: 'export HTTPS_PROXY', value: '{{ proxy }}' }
    - { regexp: 'export NO_PROXY', value: '{{ no_proxy }}' }
  when: use_proxy

- name: Python-setuptools are present
  action: "{{ ansible_pkg_mgr }} pkg={{ item }} state=present"
  with_items:
    - python-setuptools

- name: Python pip is present
  easy_install:
    name: pip

- name: Docker compose is present
  pip:
    name: docker-compose
#    version: "{{ docker_compose_version if docker_compose_version else omit }}"
    state: present

- name: Directories for certificates are present
  file:
    path: "/etc/docker/certs.d/{{ item.dir }}"
    state: directory
    mode: 0755
  with_items: certificates

- name: Certificates are present
  copy:
    src: "certs/{{ item.value }}"
    dest: "/etc/docker/certs.d/{{ item.dir }}/{{ item.value}}"
  with_items: certificates
  notify: Ubuntu restart docker 

- name: Docker daemon is restarted
  service: name=docker state=restarted
